//
//  HH_menuOrderViewController.m
//  HuiHui
//
//  Created by mac on 15-6-16.
//  Copyright (c) 2015年 MaxLinksTec. All rights reserved.
//

#import "HH_menuOrderViewController.h"

#import "CardMenuOrderCell.h"

#import "HH_TakeOrderViewController.h"

@interface HH_menuOrderViewController ()

@property (weak, nonatomic) IBOutlet UITableView *m_tableView;

@property (weak, nonatomic) IBOutlet UILabel *m_emptyLabel;

@end

@implementation HH_menuOrderViewController

@synthesize m_menuOrderList;

@synthesize m_SectionsSet;

@synthesize m_merchantId;

@synthesize m_selectSeat;

@synthesize m_shopList;

@synthesize isWaimai;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        m_menuOrderList = [[NSMutableArray alloc]initWithCapacity:0];
        
        m_SectionsSet = [[NSMutableSet alloc]init];
        
        m_shopList = [[NSMutableArray alloc]initWithCapacity:0];

    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    
    [self setTitle:@"我的会员卡商品"];
    
    [self setLeftButtonWithNormalImage:@"arrow_WL.png" action:@selector(leftClicked)];
    
    [self setRightButtonWithTitle:@"点单" action:@selector(rightClicked)];

    
    self.m_emptyLabel.hidden = YES;
    
    self.m_tableView.hidden = YES;
    
    // 请求数据
    [self orderListRequest];
    
}

- (void)viewWillAppear:(BOOL)animated{
    
    [super viewWillAppear:animated];
    
}

- (void)viewWillDisappear:(BOOL)animated{
    
    [super viewWillDisappear:animated];
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)leftClicked{
    
    [self goBack];
    
}

- (void)rightClicked{
    
    if ( self.m_selectSeat.length != 0 ) {
      
        // 进入点菜的页面
        HH_TakeOrderViewController *VC = [[HH_TakeOrderViewController alloc]initWithNibName:@"HH_TakeOrderViewController" bundle:nil];
        VC.m_shopList = self.m_shopList;
        VC.m_seat = [NSString stringWithFormat:@"%@",self.m_selectSeat];
        VC.m_merchantId = self.m_merchantId;
        VC.IsZCWaiMai = self.isWaimai;
        [self.navigationController pushViewController:VC animated:YES];
        
    }else{
        
        [self alertWithMessage:@"本商户还没有开通云菜单功能"];
        
    }
}

#pragma mark - UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    
    return self.m_menuOrderList.count;
    
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    BOOL expand = [self isSection:section];
    
    if ( expand ) {
        
        if ( self.m_menuOrderList.count != 0 ) {
            
            NSDictionary *dic = [self.m_menuOrderList objectAtIndex:section];
            
            NSMutableArray *arr = [dic objectForKey:@"detailList"];
            
            return arr.count;
            
        }else{
            
            return 0;

        }
        
    }else {
        
        return 0;
        
    }
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    static NSString *cellIdentifier = @"CardMenuOrderCellIdentifier";
    
    CardMenuOrderCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    if ( cell == nil ) {
        
        NSArray *nib = [[NSBundle mainBundle]loadNibNamed:@"CardMenuOrderCell" owner:self options:nil];
        
        cell = (CardMenuOrderCell *)[nib objectAtIndex:0];
        
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        
    }
    
    // 赋值
    if ( self.m_menuOrderList.count != 0 ) {
        
        NSDictionary *dic = [self.m_menuOrderList objectAtIndex:indexPath.section];
        
        NSMutableArray *arr = [dic objectForKey:@"detailList"];
        
        if ( arr.count != 0 ) {
            
            NSDictionary *l_dic = [arr objectAtIndex:indexPath.row];
            
            cell.m_menuName.text = [NSString stringWithFormat:@"%@",[l_dic objectForKey:@"MenuName"]];
            cell.m_menuPrice.text = [NSString stringWithFormat:@"%@元",[l_dic objectForKey:@"MenuPrice"]];
            cell.m_menuCount.text = [NSString stringWithFormat:@"%@份",[l_dic objectForKey:@"MenuAmount"]];
            
        }
        
    }

    
    return cell;
    
}

#pragma mark - UITableViewDelegate
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    
    if ( self.m_menuOrderList.count != 0 ) {
        
        NSDictionary *dic = [self.m_menuOrderList objectAtIndex:section];
        
        UIView *tempView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, WindowSizeWidth, 44)];
        tempView.backgroundColor = [UIColor whiteColor];
        
        // 显示名称
        UILabel *label = [[UILabel alloc]initWithFrame:CGRectMake(10, 5, 160, 34)];
        
        label.text = [NSString stringWithFormat:@"%@ 购买",[dic objectForKey:@"CreateDate"]];
        
        //    label.textColor = RGBACKTAB;
        label.font = [UIFont systemFontOfSize:14.0f];
        label.backgroundColor = [UIColor clearColor];
        label.textAlignment = NSTextAlignmentLeft;
        [tempView addSubview:label];
        
        
        // 显示副标题
        UILabel *subLabel = [[UILabel alloc]initWithFrame:CGRectMake(WindowSizeWidth - 100, 5, 65, 34)];
        
        subLabel.text = [NSString stringWithFormat:@"%@元",[dic objectForKey:@"PriceAmount"]];
        
        subLabel.textColor = RGBACKTAB;
        subLabel.font = [UIFont systemFontOfSize:12.0f];
        subLabel.backgroundColor = [UIColor clearColor];
        subLabel.textAlignment = NSTextAlignmentRight;
        [tempView addSubview:subLabel];
        
        
        // 显示名称
//        UILabel *label_1 = [[UILabel alloc]initWithFrame:CGRectMake(subLabel.frame.origin.x - 50, 5, 60, 34)];
//        
//        label_1.text = [NSString stringWithFormat:@"%@",[dic objectForKey:@"CreateDate"]];
//        
//        label_1.textColor = [UIColor lightGrayColor];
//        label_1.font = [UIFont systemFontOfSize:10.0f];
//        label_1.backgroundColor = [UIColor clearColor];
//        label_1.textAlignment = NSTextAlignmentRight;
//        [tempView addSubview:label_1];
        
        
        // 添加按钮
        UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
        btn.frame = CGRectMake(0, 0, WindowSizeWidth, 44);
        [btn addTarget:self action:@selector(headerClicked:) forControlEvents:UIControlEventTouchUpInside];
        btn.tag = section;
        [tempView addSubview:btn];
        
        // 添加箭头变化的图片
        UIImageView *imgV = [[UIImageView alloc]initWithFrame:CGRectMake(WindowSizeWidth - 30, 17, 16, 10)];
        
        BOOL expand = [self isSection:section];
        
        // 判断是展开还是闭合
        if ( expand ) {
            
            imgV.image = [UIImage imageNamed:@"arrow_L_up.png"];
            
        } else {
            
            imgV.image = [UIImage imageNamed:@"arrow_L_down.png"];
            
        }
        
        [tempView addSubview:imgV];
        

        return tempView;
        
        
    }else{
        
        
        return nil;
        
    }
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    
    return 44.0f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    return 60.0f;
    
}

// 判断是否展开
- (BOOL)isSection:(NSInteger)section{
    
    BOOL result = NO;
    
    if ( [self.m_SectionsSet containsObject:[NSNumber numberWithInteger:section]] ) {
        
        result = YES;
        
    }
    
    return result;
}

// 展开的section保存到expandedSectionsSet里面
- (void)setSection:(int)section expand:(BOOL)expand{
    
    if ( expand ) {
        
        if ( ![self.m_SectionsSet containsObject:[NSNumber numberWithInteger:section]] ) {
            // 首先是只显示一个点击展开的列表-即删除数据
            //            [self.m_SectionsSet removeAllObjects];
            //
            //            [self.m_SectionsSet addObject:[NSNumber numberWithInteger:section]];
            
            // 如果展开全部的数据则写下面这行代码
            [self.m_SectionsSet addObject:[NSNumber numberWithInteger:section]];
            
            
        }
        
    }else{
        // 如果展开全部的数据则写下面这行代码
        [self.m_SectionsSet removeObject:[NSNumber numberWithInteger:section]];
        
        // 首先是只显示一个点击展开的列表-即删除数据
        //        [self.m_SectionsSet removeAllObjects];
        
    }
    
}

- (void)headerClicked:(id)sender{
    
    // button的tag值
    UIButton *btn = (UIButton *)sender;
    
    //    sectionIndex = btn.tag;
    
    // bool值判断哪个section是展开还是合起来的
    BOOL expand = [self isSection:btn.tag];
    
    [self setSection:btn.tag expand:!expand];
    
    // 刷新tableView 展开全部的列表的话则就刷新某一行
    //    [self.m_tableView reloadSections:[NSIndexSet indexSetWithIndex:btn.tag] withRowAnimation:UITableViewRowAnimationNone];
    
    [self.m_tableView reloadData];
    
    
}

#pragma mark - UINetWork
- (void)orderListRequest{
    
    // 判断网络是否存在
    if ( ![self isConnectionAvailable] ) {
        return;
    }
    
    NSString *memberId = [CommonUtil getValueByKey:MEMBER_ID];
    NSString *key = [CommonUtil getServerKey];
    
    AppHttpClient* httpClient = [AppHttpClient sharedClient];
    NSDictionary *param = [NSDictionary dictionaryWithObjectsAndKeys:
                           memberId,@"memberId",
                           key,@"key",
                           self.m_merchantId,@"merchantId",nil];
    
    NSLog(@"params = %@",param);
    
    [httpClient request:@"MyOrderNoUsed.ashx" parameters:param success:^(NSJSONSerialization* json) {
        BOOL success = [[json valueForKey:@"status"] boolValue];
        
        if (success) {
            
            NSLog(@"json = %@",json);
            
            [SVProgressHUD dismiss];
            
            self.m_menuOrderList = [json valueForKey:@"orderList"];
            
            if ( self.m_menuOrderList.count != 0 ) {
                
                self.m_emptyLabel.hidden = YES;
                self.m_tableView.hidden = NO;
                
                [self.m_tableView reloadData];
                
            }else{
                
                self.m_emptyLabel.hidden = NO;
                self.m_tableView.hidden = YES;
                
                self.m_emptyLabel.text = @"暂时没有数据";
                
            }
            
        } else {
            
            NSString *msg = [json valueForKey:@"msg"];
            
            [SVProgressHUD showErrorWithStatus:msg];
        }
        
        
    } failure:^(NSError *error) {
        [SVProgressHUD showErrorWithStatus:[error localizedDescription]];
        
    }];
    
    
}


@end
